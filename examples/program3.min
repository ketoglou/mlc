//This is for testing nesting in blocks for idermetiad language

program testBlocks
{
	declare a,b,c,d;
      
	function fun1(){
		declare a;
		{
		  a := 1;
		  return a;
		}
	}

	function fun1(in v){
		declare a;
		{
                  //Silly code only for check fucntion calls
		  a := fun1(in a);
		  a := fun1();
		  a := 1 + v;
		  return a;
		}
	}

	procedure block1(inout a,inout b,in c){
		function block2(in z){
			declare e,f,g;
			procedure block3(){
				function block4(in k){
					{
  					  a := block2(in k);
					  return k;
					}
				}
			}
			return 2
		}
		procedure block5(in a,in b){
			{
			  call block1(inout a,inout b,in 3);
			  a := block2(in a);
			  a := fun1(in a);
			}
		}
	}
	

	{
		call block1(inout a,inout b,in c-1);
		d := 3+a+b-23*8+b/2 * 3533;
		print(d);
		c := a+2+b+(c+3+d)+c;
		input(a);
		c := 1 + fun1();
	}
}
